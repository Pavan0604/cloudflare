name: Test-Github

run-name: Testing

on:
    workflow_dispatch:
    push:
        branches:
          "*"

jobs:
    Test-github:
        runs-on: "ubuntu-latest"
        steps:
        - name: get logical id of the launch template 
          id: get-logical-id
          run: |
            template_id=$(aws cloudformation describe-stack-resource --stack-name=test3  --logical-resource-id=GithubActionsLaunchTemplate --region=ap-south-1 --query='StackResourceDetail.PhysicalResourceId')
            run_instance_output=$(aws ec2 run-instances --launch-template LaunchTemplateId=${template_id},Version='$Latest' --region=ap-south-1)
            instance_id=$(echo $run_instance_output | jq -r '.Instances[0].InstanceId')
            echo $instance_id
            echo INSTANCE_ID=$instance_id >> "$GITHUB_OUTPUT"
          env:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        outputs:
            instance_id: ${{ steps.get-logical-id.outputs.INSTANCE_ID }}

    Run-Hello-World:
        runs-on: ${{ needs.Test-github.outputs.instance_id }}
        needs: Test-github
        steps:
        - name: Print Hostname
          id: print-hello-world
          run: |
            echo "hostname is ${HOSTNAME}"

    Clean-Up-Runner:
        runs-on: ${{ needs.Test-github.outputs.instance_id }}
        needs: [Test-github, Run-Hello-World]
        steps:
        - name: Clean up runner
          id: clean-up-runner
          run: |
            echo 'export RUNNER_ALLOW_RUNASROOT=1' >> /home/ec2-user/.bashrc
            echo 'export ACTIONS_RUNNER_HOOK_JOB_COMPLETED="cd /home/ec2-user/actions-runner && ./svc.sh stop; cd /home/ec2-user/actions-runner && ./svc.sh uninstall; cd /home/ec2-user/actions-runner && ./config.sh --remove --pat ${{ secrets.PERSONAL_ACCESS_TOKEN }}"' >> /home/ec2-user/.bashrc
            cat $HOME/.bashrc
            source $HOME/.bashrc

    # Terminate-Instance:
    #     runs-on: "ubuntu-latest"
    #     if: ${{ always() }}
    #     needs: [Run-Hello-World, Test-github, Clean-Up-Runner]
    #     steps:
    #     - name: terminate Instance
    #       id: terminate-instance
    #       run: |
    #         aws ec2 terminate-instances --instance-ids ${{ needs.Test-github.outputs.instance_id }} --region ap-south-1
    #       env:
    #         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    
    

